#+TITLE: Nix-Org, A Simply Aesthetic, Productive setup with Declaration World! Just do enable=true; 


--------------

*** Utilities that are Best! üåü
--------------

|-------------------------+-------------------------------------|
| Class                   | Name                                |
|-------------------------+-------------------------------------|
| Window Manager          | [[https://hyprland.org/][Hyprland]] üå∏                          |
| Text Editor             | [[https://www.gnu.org/software/emacs/][Emacs]] üíÆ                             |
| Gtk Theme               | [[https://github.com/Fausto-Korpsvart/Gruvbox-GTK-Theme][Gruvbox]] / [[https://github.com/vinceliuice/Orchis-theme][Orchis]] üé®                  |
| Font                    | [[https://tosche.net/fonts/comic-code][Comic Code]] / [[https://github.com/dtinth/comic-mono-font][Comic Mono]] / [[https://github.com/tonsky/FiraCode][Fira Code]] |
| Pdf Reader              | [[https://github.com/ahrm/sioyek][Sioyek]] üìî (ditch zathura)            |
| Media Player            | [[https://mpv.io][MPV!]] üé¨ (its MVP too)                |
| Image Viewer            | [[https://sr.ht/~exec64/imv/][Imv]] üñºÔ∏è                                 |
| RSS Reader              | [[https://github.com/skeeto/elfeed][Elfeed]] üì∞ (Again, Emacs)             |
| Music Player            | [[https://github.com/ncmpcpp/ncmpcpp][Ncmpcpp]] or [[https://github.com//mingus][Mingus in Emacs]] üé∂        |
| Terminal                | [[https://codeberg.org/dnkl/foot][Foot]] via footclient ‚öΩ               |
| Menu/Launcher           | [[https://github.com/Cloudef/bemenu][Bemenu]] üöÄ                            |
| Notification            | [[https://github.com/dunst/dunst][Dunst]]  üõéÔ∏è                            |
| Shell                   | [[https://zsh.org][Zshell]] with [[https://starship.rs][Starship]] üî∞              |
| Status Bar              | [[https://github.com/Alexays/Waybar][Waybar]]  üç•                           |
| Favourite Color-Schemes | Modus-Vivendi + Gruvbox             |
|-------------------------+-------------------------------------|

#+begin_quote
Rest all other stuffs I do in Emacs, tbh I could do everything in Emacs lol.
#+end_quote


Feel free to open an issue and ask me doubts or about some improvements, you wanna inform! I will be glad.
If you really wanna talk/discuss with me, open an issue so I will join on some media (Irc/matrix or telegram)


***** Illustrations - Unix Way üéÜ

+ *Desktop Rice*
  #+attr_html: :width="100px"
  [[file:assets/desktop-fetch.png]]

+ *RSS and Emacs*

#+ATTR_HTML: width="100px"
[[file:assets/rss-org.png]]

+ *Firefox and Pdf Reader*
  #+attr_html: :width 500
  [[file:assets/pdf-browse.png]]

+ Emacs web browser (eww) 
  #+attr_html: :width 500
  [[file:assets/zone-eww.png]]

--------------

* Organized Nix Flakes? üå≤

I manage my whole system with single org file. Its easy and pretty handy. You can read that file here *‚Ü¨* [[file:d-setup.org][d-setup.org]] , its both self documenting and has all source code blocks.

Another key feature in my setup is, every file i tangle is at *read-only mode* (#o444). So generally we can avoid editing/touching them. Thus, every action has to be made in *d-setup.org* only.

Also, I have made some config (/hyprland,emacs../) files to be *symlink*, so i can edit them without requiring to rebuild whole thing!
--------------

#+begin_center
| *Note*: Check pre-requisites heading in setup file to add your username and hostname there.                              |
| There are *#FIXME tags in [[file:d-setup.org][d-setup.org]]* where you should edit it accordingly to your *USERNAME* and *HOSTNAME* (mostly for tangling path).   I have tried to comment few things to make it as a info, you can _ask/create issue_ regarding this, don't hold back.   *I'm waiting for you to ask!* |
#+end_center


--------------

*** Installation Guide
If you are beginner, I'd recommend you to play with it in VM.

1. Partition the disk as you require (edit file system section in configuration.nix)

2. Run command to generate hardware-configuration.nix which will be created at /mnt/etc/nixos

      #+begin_src shell
     sudo nixos-generate-config --root /mnt
   #+end_src

3. Then git clone this repo and remove flake.lock and update channels

   #+begin_src shell
     # Install git first
     nix-env -iA nixos.git

     git clone --depth=1 https://github.com/idlip/d-nix SETUP
     cd SETUP
     rm flake.lock

     # Update nix channels
     nix flake update
   #+end_src

4. Do rebuild of flake system.

   #+begin_src shell
     sudo nixos-rebuild switch --flake .#HOSTNAME
   #+end_src

--------------


Before that I believe you are a tinkerer, I have a motto which goes like this


#+begin_quote
/If you want to understand the whole, Understand its parts/. *[[https://www.verywellmind.com/what-is-gestalt-psychology-2795808][Gestalt Psychology]]*
#+end_quote

  
  I mean, that is how *Nix Philosophy or Linux users are, We understand each utility (grep, sed...) and make precise use of it, You can technically call it Magic of scripting.


**** Credits üéñÔ∏è

These configs were the inspiration and helped to build this way.

I thank them sincerely.

[[https://github.com/Iron-Shark/Technonomicon][Iron Shark]] *‚üπ* Made migrating to Single org-file config very easy.

[[https://github.com/sioodmy/dotfiles][Sioodmy]] *‚üπ* First config which I understand thoroughly and modified based on this.

------------------------------------------------------------------------------------------

