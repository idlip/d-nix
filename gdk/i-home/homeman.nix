# WARNING : This file was generated by d-setup.org
# DO NOT MODIFY THIS FILE!
# Any changes made here will be overwritten.

{ inputs, pkgs, self, lib, config, ... }:

{

programs = {
  # Starship
  starship = {
    enable = true;
    enableZshIntegration = true;
    settings = {
      add_newline = true;
      scan_timeout = 5;
      character = {
	      error_symbol = " [](#df5b61)";
	      success_symbol = "[](#6791c9)";
	      vicmd_symbol = "[](bold yellow)";
	      format = "[$directory$all$character](bold)[  ](bold blue)";
      };
      git_commit = {commit_hash_length = 4;};
      line_break.disabled = false;
      lua.symbol = "[󰢱](blue) ";
      python.symbol = "[](blue) ";
      directory.read_only = " ";
      nix_shell.symbol = " ";
      hostname = {
	      ssh_only = true;
	      format = "[$hostname](bold blue) ";
	      disabled = false;
      };
    };
  };

  zsh = {
    enable = true;
    dotDir = ".config/shell";
    enableCompletion = true;
    enableAutosuggestions = true;
    history.extended = true;
    sessionVariables = {
      LC_ALL = "en_US.UTF-8";
      ZSH_AUTOSUGGEST_USE_ASYNC = "true";
      NIXOS_OZONE_WL = "1";
      BROWSER = "librewolf";
      MOZ_ENABLE_WAYLAND = "1";
    };

    envExtra = ''
	export PATH="$PATH:/home/i/d-git/d-bin/bin:$HOME/.local/bin/d"
	export EDITOR="emacsclient -nw -a 'nvim'"
	export BEMENU_OPTS="-i -s -l 10 -R 20 -p ' ' -c -B 2 -W 0.5 --hp 15 --fn 'Code D Ace 20' --nb '#121212' --ab '#121212' --bdr '#c6daff' --nf '#ffffff' --af '#ffffff' --hb '#9aff9a' --hf '#121212' --fb '#121212' --ff '#a6e3a1' --tb '#121212' --tf '#f9e2af' ";
	export VISUAL=$EDITOR
	export STARDICT_DATA_DIR="$HOME/.local/share/stardict"
	export GRIM_DEFAULT_DIR="$HOME/pics/sshots/"

	if [ -z $DISPLAY ] && [ "$(tty)" = "/dev/tty1" ]; then
	  exec Hyprland
	fi
	'';

    initExtra = lib.mkAfter ''
	source /home/i/d-git/d-nix/gdk/i-home/configs/sources.sh

	source "${pkgs.zsh-syntax-highlighting}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	source "${pkgs.zsh-history-substring-search}/share/zsh-history-substring-search/zsh-history-substring-search.zsh"
	source "${pkgs.zsh-autosuggestions}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
	source "${pkgs.nix-zsh-completions}/share/zsh/plugins/nix/nix-zsh-completions.plugin.zsh"
	source "${pkgs.zsh-nix-shell}/share/zsh-nix-shell/nix-shell.plugin.zsh"
	source "${pkgs.zsh-autopair}/share/zsh/zsh-autopair/autopair.zsh"

	# For vterm, needs to be at last!
	function vterm_prompt_end() {
	    printf "\e]%s\e\\" "$1" "51;A$(whoami)@$(hostname):$(pwd)"
	    }
	    setopt PROMPT_SUBST
	    PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'                       
	'';

    history = {
      save = 10000;
      size = 10000;
      expireDuplicatesFirst = true;
      ignoreDups = true;
    };
  };
};

home.packages = with pkgs; [

# wayland
libnotify libsixel bemenu
wf-recorder brightnessctl pamixer slurp grim 
wl-clipboard wtype swaybg swayidle gammastep

# media
mpc_cli pulsemixer imv
yt-dlp jq ytfzf ani-cli youtube-tui

# cli tools
pcmanfm libreoffice pandoc groff mupdf
# wkhtmltopdf-bin
fzf neovim unzip  
aspell aspellDicts.en-science aspellDicts.en hunspell hunspellDicts.en-us
ffmpeg sdcv nq
#mu isync
syncthing dconf keepassxc

# themes
gruvbox-gtk-theme
orchis-theme
bibata-cursors
papirus-icon-theme

# pioneer of web
mullvad-browser librewolf brave ungoogled-chromium

nodePackages.bash-language-server
# nodePackages.vscode-langservers-extracted
# python311Packages.python-lsp-server
nodePackages.pyright
python3 gcc gnumake
R rPackages.languageserver rPackages.lintr
tree-sitter
texlive.combined.scheme-full

];

gtk = {
  enable = true;
  theme = {
    name = "Gruvbox-Dark-B";
  };
  iconTheme = {
    name = "Papirus";
  };
  font = {
    name = "Code D Haki";
    size = 17;
  };
  gtk3.extraConfig = {
    gtk-xft-antialias = 1;
    gtk-xft-hinting = 1;
    gtk-xft-hintstyle = "hintslight";
    gtk-xft-rgba = "rgb";
  };
  gtk2.extraConfig = ''
    gtk-xft-antialias=1
    gtk-xft-hinting=1
    gtk-xft-hintstyle="hintslight"
    gtk-xft-rgba="rgb"
  '';
};

# cursor theme
home.pointerCursor = {
  name = "Bibata-Modern-Classic";
  package = pkgs.bibata-cursors;
  size = 24;
  gtk.enable = true;
};

programs = {
  aria2 = {
    enable = true;
    settings = {
      dir = "/home/i/dloads";
      file-allocation = "none";
      log-level = "warn";
      split = "10";
      max-connection-per-server = 10;
      min-split-size = "5M";
      bt-max-peers = "0";
      bt-request-peer-speed-limit = "0";
      max-overall-upload-limit = "512k";
      bt-external-ip = "127.0.0.1";
      dht-listen-port = "6882";
      enable-dht = "true";
      enable-peer-exchange = "true";
      listen-port = "6881";
      bt-force-encryption = "true";
      bt-min-crypto-level = "arc4";
      bt-require-crypto = "true";
      follow-torrent = "mem";
      seed-ratio = "100";
      seed-time = "0";
      socket-recv-buffer-size = "1M";
      event-poll = "epoll";
      realtime-chunk-checksum = "true";
      allow-overwrite = "true";
      always-resume = "true";
      auto-file-renaming = "false";
      continue = "true";
      rpc-save-upload-metadata = "false";
    };
  };
};

programs = {
  exa = {
    enable = true;
    extraOptions = ["--group-directories-first" "--header"];
    icons = true;
  };
  bat = {
    enable = true;
    extraPackages = with pkgs.bat-extras; [ batdiff batman batgrep batwatch ];
    # config = {
    #   theme = "gruvbox-dark";
    # };
  };
  ripgrep = {
    enable = true;
    arguments = [
      "--max-columns-preview"
      "--colors=line:style:bold"
    ];
  };
  btop = {
    enable = true;  
    settings = {
      color_theme = "Default";
      theme_background = false;
      vim_keys = true;
      shown_boxes = "proc cpu";
      rounded_corners = true ;
      graph_symbol = "block";
      proc_sorting = "memory";
      proc_reversed = false;
      proc_gradient = true;
    };
  };
};

services.dunst = {
  enable = true;
  iconTheme = {
    package = pkgs.papirus-icon-theme;
    name = "Papirus";
  };
  settings = {
    global = {
      monitor = 0;
      background = "#050505";
      frame_color = "#2e8b57";
      transparency = 0;
      follow = "none";
      width = 900;
      height = 900;
      idle_threshold = 120;
      origin = "top-right";
      offset = "10x50";
      scale = 0;
      notification_limit = 0;
      progress_bar = "true";
      alignment = "center";
      progress_bar_height = 10;
      progress_bar_frame_width = 1;
      progress_bar_min_width = 150;
      progress_bar_max_width = 500;
      indicate_hidden = "yes";
      separator_height = 2;
      padding = 20;
      horizontal_padding = 12;
      text_icon_padding = 8;
      frame_width = 3;
      separator_color = "frame";
      sort = "yes";
      font = "Code D Ace 20";
      line_height = 0;
      markup = "full";
      stack_duplicates = "true";
      vertical_alignment = "center";
      show_age_threshold = 60;
      ellipsize = "middle";
      ignore_newline = "no";
      show_indicators = "yes";
      icon_position = "left";
      max_icon_size = 32;
      sticky_history = "yes";
      history_length = 20;
      browser = "/home/i/d-git/d-bin/bin/d-stuff";
      always_run_script = "true";
      title = "Dunst";
      class = "Dunst";
      corner_radius = 20;
      ignore_dbusclose = false;
      force_xwayland = "false";
      layer = "overlay";
      mouse_left_click = "do_action";
      mouse_middle_click = "do_action";
      mouse_right_click = "close_all";
      };

      reminder = {
       category = "reminder";
       background = "#33333390";
       foreground = "#ffffff";
       timeout = 0;
       script="d-notif";
    };

    urgency_low = {
      background = "#050505";
      foreground = "#ffffff";
      timeout = 5;
    };
    urgency_normal = {
      background = "#050505";
      foreground = "#ffffff";
      timeout = 6;
    };
    urgency_critical = {
      background = "#050505";
      foreground = "#ffffff";
      frame_color = "#f38ba8";
      timeout = 0;
    };
  };
};

programs.foot = {
  enable = true;
  # doesnt work properly; Enable it in hyprland or sway config
  server.enable = false;
  settings = {
    main = {
      term = "xterm-256color";
      font = "Code D OnePiece:size=12, Noto Color Emoji:size=15";
      font-bold = "Code D Lip:size=12, Noto Color Emoji:size=15";
      letter-spacing = "1";
       box-drawings-uses-font-glyphs = "no";
    };
    scrollback = {
      lines = "1000";
    };
    key-bindings = {
      clipboard-copy = "Control+Shift+c Mod1+w";
      clipboard-paste = "Control+Shift+v Control+y";
      primary-paste = "Shift+Insert";

    };
    colors = {
     background="050505";
     foreground="ffffff";
     regular0="030303";
     regular1="ff8059";
     regular2="44bc44";
     regular3="d0bc00";
     regular4="2fafff";
     regular5="feacd0";
     regular6="00d3d0";
     regular7="bfbfbf";
     bright0="595959";
     bright1="ef8b50";
     bright2="70b900";
     bright3="c0c530";
     bright4="79a8ff";
     bright5="b6a0ff";
     bright6="6ae4b9";
     bright7="ffffff";
      alpha= "1.0";
    };
    mouse = {
      hide-when-typing = "yes";
    };
  };
};

# Symlinking the file (hyprland.conf) from the path of repo so we can edit and have immediate effects without requiring to rebuild
  xdg.configFile."hypr/hyprland.conf".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/hypr/hyprland.conf";

wayland.windowManager.sway = {
  enable = true;
  config = null;
  extraConfig = ''
    # user config directory
include $HOME/.config/sway/config.d/*

# only enable this if every app you use is compatible with wayland
xwayland disable
         '';
   wrapperFeatures.gtk = true;
};

# Symlinking emacs configs, so we can edit it in realtime and have immediate effect without requiring a rebuild.

home.file.".config/emacs/early-init.el".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/emacs/early-init.el";
home.file.".config/emacs/init.el".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/emacs/init.el";

programs.emacs = {
  enable = true;
  package = pkgs.emacs29-pgtk;
  extraPackages = (epkgs: (with epkgs; [
    treesit-grammars.with-all-grammars
    vterm multi-vterm vundo undo-fu-session flycheck helpful ox-pandoc
    no-littering rainbow-delimiters rainbow-mode
    vertico orderless consult marginalia embark org-modern corfu cape corfu-terminal
    org olivetti nerd-icons async dirvish
    embark-consult consult-eglot consult-flycheck markdown-mode nix-mode
    reddigg hnreader mingus which-key magit webpaste org-present
    # pdf-tools nov (using built-in doc-view)
    shrface shr-tag-pre-highlight gcmh nov devdocs-browser
    org-mime beframe denote tempel tempel-collection
    sdcv elfeed elfeed-org link-hint powerthesaurus jinx meow
    doom-modeline hide-mode-line el-fetch ox-hugo
    ement kind-icon speed-type ess vc-backup aria2
  ])
  );
};

services.mpd = {
  enable = true;
  network = {
    listenAddress = "any";
    port = 6600;
  };
  musicDirectory = "~/d-sync/music";
  extraConfig = ''
      audio_output {
	type    "pipewire"
	name    "pipewire"
      }
      auto_update "yes"
    '';
};

programs= {
  ncmpcpp = {
    enable = true;
    settings = {
      ncmpcpp_directory = "~/.config/ncmpcpp";
      lyrics_directory = "~/.local/share/lyrics";
      message_delay_time = "1";
      song_list_format = "{$4%a - }{%t}|{$8%f$9}$R{$3(%l)$9}";
      song_status_format = "$b{{$8'%t'}} $3by {$4%a{ $3in $7%b{ (%y)}} $3}|{$8%f}";
      song_library_format = "{%n - }{%t}|{%f}";
      alternative_header_first_line_format = "$b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b";
      alternative_header_second_line_format = "{{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}";
      current_item_prefix = "$(cyan)$r$b";
      current_item_suffix = "$/r$(end)$/b";
      current_item_inactive_column_prefix = "$(magenta)$r";
      current_item_inactive_column_suffix = "$/r$(end)";
      playlist_display_mode = "columns";
      browser_display_mode = "columns";
      progressbar_look = "->";
      media_library_primary_tag = "album_artist";
      media_library_albums_split_by_date = "no";
      startup_screen = "media_library";
      display_volume_level = "no";
      ignore_leading_the = "yes";
      external_editor = "nvim";
      use_console_editor = "yes";
      empty_tag_color = "magenta";
      main_window_color = "white";
      progressbar_color = "black:b";
      progressbar_elapsed_color = "blue:b";
      statusbar_color = "red";
      statusbar_time_color = "cyan:b";
    };
  };
  mpv = {
    enable = true;
    # scripts = with pkgs.mpvScripts; [ thumbnail sponsorblock];
  };
  yt-dlp = {
    enable = true;
    settings = {
      embed-thumbnail = true;
      embed-metadata = true;
      embed-subs = true;
      sub-langs = "all";
    };
  };
};

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/mpv/mpv.conf".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/mpv/mpv.conf";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/mpv/input.conf".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/mpv/input.conf";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/imv/config".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/imv/config";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/rofi/theme.rasi".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/rofi/theme.rasi";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/rofi/config.rasi".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/rofi/config.rasi";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/rofi/dmoji.rasi".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/rofi/dmoji.rasi";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/rofi/smenu.rasi".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/rofi/smenu.rasi";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/rofi/list.rasi".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/rofi/list.rasi";

programs.sioyek = {
  enable = true;
};

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/sioyek/prefs_user.config".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/sioyek/prefs_user.config";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/sioyek/keys_user.config".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/sioyek/keys_user.config";

services = {
  # udiskie = {
  # enable = true;
  # automount = true;
  # };
  gpg-agent = {
    enable = true;
    pinentryFlavor = "gnome3";
    enableSshSupport = true;
    enableZshIntegration = true;
  };
};
programs = {
  gpg.enable = true;
  man.enable = true;
  # direnv = {
  #   enable = true;
  #   nix-direnv.enable = true;
  # };
  tealdeer = {
    enable = true;
    settings = {
      display = {
	compact = false;
	use_pager = true;
      };
      updates = {
	auto_update = true;
      };
    };
  };
};
xdg = {
  userDirs = {
    enable = true;
    documents = "$HOME/docs";
    download = "$HOME/dloads";
    videos = "$HOME/vids";
    music = "$HOME/music";
    pictures = "$HOME/pics";
  };
  mimeApps.enable = true;
  mimeApps.associations.added = {
    "text/html" = ["firefox.desktop"];
    "x-scheme-handler/http" = ["firefox.desktop"];
    "x-scheme-handler/https" = ["firefox.desktop"];
    "x-scheme-handler/ftp" = ["firefox.desktop"];
    "x-scheme-handler/about" = ["firefox.desktop"];
    "x-scheme-handler/unknown" = ["firefox.desktop"];
    "application/x-extension-htm" = ["firefox.desktop"];
    "application/x-extension-html" = ["firefox.desktop"];
    "application/x-extension-shtml" = ["firefox.desktop"];
    "application/xhtml+xml" = ["firefox.desktop"];
    "application/x-extension-xhtml" = ["firefox.desktop"];
    "application/x-extension-xht" = ["firefox.desktop"];

    "audio/*" = ["mpv.desktop"];
    "video/*" = ["mpv.dekstop"];
    "image/*" = ["imv.desktop"];
    "application/json" = ["firefox.desktop"];
    "application/pdf" = ["sioyek.desktop"];
    "x-scheme-handler/magnet" = ["d-stuff.desktop"];
    "application/epub+zip" = ["sioyek.desktop"];
    "application/zip" = ["sioyek.desktop"];
    "application/x.bittorrent" = ["d-stuff.desktop"];
  };
  mimeApps.defaultApplications = {
    "text/html" = ["firefox.desktop"];
    "x-scheme-handler/http" = ["firefox.desktop"];
    "x-scheme-handler/https" = ["firefox.desktop"];
    "x-scheme-handler/ftp" = ["firefox.desktop"];
    "x-scheme-handler/about" = ["firefox.desktop"];
    "x-scheme-handler/unknown" = ["firefox.desktop"];
    "application/x-extension-htm" = ["firefox.desktop"];
    "application/x-extension-html" = ["firefox.desktop"];
    "application/x-extension-shtml" = ["firefox.desktop"];
    "application/xhtml+xml" = ["firefox.desktop"];
    "application/x-extension-xhtml" = ["firefox.desktop"];
    "application/x-extension-xht" = ["firefox.desktop"];

    "audio/*" = ["mpv.desktop"];
    "video/*" = ["mpv.dekstop"];
    "image/*" = ["imv.desktop"];
    "application/json" = ["firefox.desktop"];
    "application/pdf" = ["sioyek.desktop"];
    "x-scheme-handler/magnet" = ["d-stuff.desktop"];
    "application/epub+zip" = ["sioyek.desktop"];
    "application/zip" = ["sioyek.desktop"];
    "application/x.bittorrent" = ["d-stuff.desktop"];
  };
};

programs.waybar = {
  enable = true;
  # package = pkgs.waybar.overrideAttrs (oldAttrs: {
  #   mesonFlags = oldAttrs.mesonFlags ++ ["-Dexperimental=true"];
  # });

  settings = {
    mainBar = {
      layer = "top";
      position = "top";
      # height = 15;
      # spacing = 7;
      fixed-center = true;
      exclusive = true;
      modules-left = [
	      "custom/launcher"
	      "hyprland/workspaces"
	      "hyprland/window"
	      "hyprland/submap"
      ];
      modules-center = [
	      "clock" "mpd"
      ];
      modules-right = ["network" "battery" "memory" "pulseaudio" "custom/power"];
      "hyprland/workspaces" = {
	      format = "{icon}";
	      active-only = false;
	      on-click = "activate";
	      format-icons = {
		      active = "";
		      default = "";
		      "1" = "1";
		      "2" = "2";	
		      "3" = "3";
		      "4" = "4";
		      "5" = "5";
		      "6" = "6";
	      };
      };

      "hyprland/window" = {
	      "format" = "👁{}";
	      "separate-outputs" = true;
	      "rewrite" = {
		"(.*) - Mozilla Firefox" = "🦊 $1";
		"(.*) - zsh" = ">_ [$1]";
	      };
      };

      "hyprland/submap" = {
	      "format" = " {}";
	      "max-length" = 14;
	      "tooltip" = false;
      };

      "custom/launcher" = {
	      "format" = " ";
	      "tooltip" = false;
	      "on-click" = "bemenu-run";
      };

      "battery" =  {
	      "bat" =  "BAT0";
	      "interval" =  30;
	      "states" =  {
		      "warning" =  50;
		      "critical" =  30;
	      };
	      "format" =  "{capacity}% {icon}";
	      "format-icons" =  [" " "🔴" "🪫" " " " "];
	      "max-length" =  25;
      };

      "mpd" = {
	      "format" = "{stateIcon} {title}  ";
	      "format-disconnected" = "  ";
	      "format-stopped" = "  ";
	      "title-len" = 20;
	      "interval" = 10;
	      "on-click" = "mpc toggle";
	      "state-icons" = {
		      "paused" = "";
		      "playing" = "";
	      };
	      "tooltip-format" = "Playing: {filename}";
	      "tooltip-format-disconnected" = "";
      };
	    "custom/power" = {
	      "format" = "⏻";
	      "on-click" = "d-power";
	      "tooltip" = false;
      };
      "clock" = {
	      "tooltip-format" = "{:%A %B %d %Y | %H:%M}";
	      "format-alt" = " {:%a %d %b  %I:%M %p}";
	      "format" = " {:%H:%M} ";
	      ##"timezones" = [ "Kolkata" ];
	      ##"max-length" = 200;
	      "interval" = 1;
      };
      "cpu" = {
	      "format" = "﬙ {usage: >3}%";
	      "on-click" = "footclient -e btop";
      };
      "memory" = {
	      "format" = " {: >3}%";
	      "on-click" = "foot -e btop";
      };
      "network" = {
	      "interface" = "wlp2s0";
	      "format" = "⚠ Disabled";
	      "format-wifi" = " {bandwidthDownBytes}  {bandwidthUpBytes}";
	      "format-ethernet" = " {ifname}: {ipaddr}/{cidr}";
	      "format-disconnected" = "⚠ Disconnected";
	      "on-click" = "foot -e nmtui";
	      "interval" = 2;
      };
      "pulseaudio" = {
	      "scroll-step" = 2;
	      "format" = "{icon} {volume: >3}% ";
	      "format-bluetooth" = "{icon} {volume: >3}%";
	      "format-muted" =" muted ";
	      "on-click" = "pamixer -t";
	      "format-icons" = {
		      "headphones" = "";
		      "handsfree" = "";
		      "headset" = "";
		      "phone" = "";
		      "portable" = "";
		      "car" = "";
		      "default" = ["" ""];
	      };
      };
      "custom/wf-recorder" = {
		    "format" = "{}";
		    "interval" = "once";
		    "exec" = "echo ''";
		    "tooltip" = "false";
		    "exec-if" = "pgrep 'wf-recorder'";
		    "on-click" = "exec d-record";
		    "signal" = 8;
	    };
    };
  };
};

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/waybar/style.css".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/waybar/style.css";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/waybar/haki.css".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/waybar/haki.css";

# We will tangle config files from git repo to home dir (Let nix manage the magics)

home.file.".config/ytfzf/conf.sh".source = config.lib.file.mkOutOfStoreSymlink "/home/i/d-git/d-nix/gdk/i-home/configs/ytfzf/conf.sh";

}
